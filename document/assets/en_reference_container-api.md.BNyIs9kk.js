import{_ as i,c as s,o as a,a4 as e}from"./chunks/framework.DKWfLnao.js";const y=JSON.parse('{"title":"Container API","description":"","frontmatter":{},"headers":[],"relativePath":"en/reference/container-api.md","filePath":"en/reference/container-api.md","lastUpdated":1738733395000}'),n={name:"en/reference/container-api.md"},t=e(`<h1 id="container-api" tabindex="-1">Container API <a class="header-anchor" href="#container-api" aria-label="Permalink to &quot;Container API&quot;">​</a></h1><p>The danmaku container instance has the following properties and methods. You can refer to this section when you get a container instance in certain hooks. You can retrieve the instance via <a href="./manager-properties.html#manager-container"><strong><code>manager.container</code></strong></a>.</p><div class="note custom-block github-alert"><p class="custom-block-title">Notes</p><p>If you need to change the dimensions of the container, it&#39;s recommended to use the <code>manager.setArea()</code> method instead of changing it through <code>manager.container.setStyle()</code>. Otherwise, you will need to manually call <code>manager.format()</code>.</p></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  node</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HTMLDivElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  parentNode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HTMLElement</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  setStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> StyleKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CSSStyleDeclaration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="container-width" tabindex="-1">container.width <a class="header-anchor" href="#container-width" aria-label="Permalink to &quot;container.width&quot;">​</a></h2><p><strong>Type: <code>number</code></strong><br><strong>Default Value: <code>0</code></strong></p><p>The width of the container, this value may change after calling <code>manager.format()</code>.</p><h2 id="container-height" tabindex="-1">container.height <a class="header-anchor" href="#container-height" aria-label="Permalink to &quot;container.height&quot;">​</a></h2><p><strong>Type: <code>number</code></strong><br><strong>Default Value: <code>0</code></strong></p><p>The height of the container, this value may change after calling <code>manager.format()</code>.</p><h2 id="container-node" tabindex="-1">container.node <a class="header-anchor" href="#container-node" aria-label="Permalink to &quot;container.node&quot;">​</a></h2><p><strong>Type: <code>HTMLDivElement</code></strong><br><strong>Default Value: <code>div</code></strong></p><p>The DOM node of the container.</p><h2 id="container-parentnode" tabindex="-1">container.parentNode <a class="header-anchor" href="#container-parentnode" aria-label="Permalink to &quot;container.parentNode&quot;">​</a></h2><p><strong>Type: <code>HTMLElement | null</code></strong><br><strong>Default Value: <code>null</code></strong></p><p>The parent node of the container, which can be accessed through this property after setting with <code>manager.mount()</code>.</p><h2 id="container-setstyle" tabindex="-1">container.setStyle() <a class="header-anchor" href="#container-setstyle" aria-label="Permalink to &quot;container.setStyle()&quot;">​</a></h2><p><strong>Type: <code>setStyle&lt;T extends StyleKey&gt;(key: T, val: CSSStyleDeclaration[T]): void</code></strong></p><p>This method allows you to set the style of the container node.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// So you can set some styles on the container like this</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">manager.container.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;background&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;red&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,20),h=[t];function l(r,o,p,d,k,c){return a(),s("div",null,h)}const E=i(n,[["render",l]]);export{y as __pageData,E as default};
